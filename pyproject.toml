[build-system]
requires = ["flit_core >=2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "upkie"
readme = "README.md"
authors = [
    {name = "Stéphane Caron", email = "stephane.caron@normalesup.org"},
]
maintainers = [
    {name = "Stéphane Caron", email = "stephane.caron@normalesup.org"},
]
dynamic = ["version", "description"]
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Robot Framework :: Library",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "gymnasium >= 1.0.0",
    "loop-rate-limiters >= 1.0.0",
    "msgpack >= 1.0.2",
    "numpy >= 1.24.3",
    "scipy >= 1.10.0",
    "upkie_description >= 2.1.0",
]
keywords = ["wheeled", "biped", "robot", "balance", "motion", "control", "robotics"]

[project.urls]
Homepage = "https://hackaday.io/project/185729-upkie-wheeled-biped-robots"
Documentation = "https://upkie.github.io/upkie/"
Source = "https://github.com/upkie/upkie"
Tracker = "https://github.com/upkie/upkie/issues"
Changelog = "https://github.com/upkie/upkie/blob/main/CHANGELOG.md"

[tool.flit.sdist]
exclude = [
    "**/*.sh",
    "**/BUILD",
    "**/tests/*",
    ".bazel*",
    ".clang-format",
    ".git*",
    "CONTRIBUTING.md",
    "CPPLINT.cfg",
    "WORKSPACE",
    "agents/",
    "examples/",
    "logs/",
    "spines/",
    "tools/",
    "upkie/cpp",
]
include = [
    "upkie/config/*.py",
    "upkie/envs/*.py",
    "upkie/utils/*.py",
]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "linux-aarch64", "osx-arm64"]

[tool.pixi.pypi-dependencies]
upkie = { path = ".", editable = true }

[tool.pixi.dependencies]
gymnasium = ">=1.0.0"
loop-rate-limiters = ">=1.0.0"
msgpack-python = ">=1.0.2"
numpy = ">=1.24.3"
scipy = ">=1.10.0"
upkie_description = ">=2.1.0"

[tool.pixi.feature.agent-mpc-balancer.dependencies]
gin-config = ">=0.5.0"
meshcat-shapes = ">=0.3.0"
pink = ">=3.0.0,<4"
pinocchio = ">=3.1.0,<4"
proxsuite = ">=0.4.1"
qpmpc = ">=3.0.1,<4"

[tool.pixi.feature.agent-mpc-balancer]
tasks.mpc_balancer= "python -m agents.mpc_balancer"

[tool.pixi.feature.agent-trajectory-player.dependencies]
gin-config = ">=0.5.0"
meshcat-shapes = ">=0.3.0"
pandas = "*"
pink = ">=3.0.0,<4"
proxsuite = ">=0.4.1"
qpmpc = ">=3.0.1,<4"

[tool.pixi.feature.agent-rl-baselines3-zoo.dependencies]
stable-baselines3 = ">=2.3.0"
tensorboard = "*"

[tool.pixi.feature.agent-rl-baselines3-zoo.pypi-dependencies]
rl-zoo3 = "*"

[tool.pixi.feature.agent-rl-baselines3-zoo]
tasks.rl-baselines3-train = "python agents/rl_baselines3_zoo/train.py"
tasks.rl-baselines3-enjoy = "python agents/rl_baselines3_zoo/enjoy.py"

[tool.pixi.feature.docs]
dependencies = { doxygen = "<=1.9.5", graphviz = "*", make = "*", "stable-baselines3" = "*" }
tasks.docs-make = "doxygen --version && cd docs && make"
tasks.docs-open = { cmd = "xdg-open docs/html/index.html", depends-on = ["docs-make"] }

[tool.pixi.feature.lint]
dependencies = { six = "*", ruff = ">=0.4.3" }
tasks.lint-bazel = { cmd = "./tools/bazelisk test --config lint //upkie/..." }
tasks.lint-ruff = { cmd = "ruff check upkie" }
tasks.lint-ruff-format = { cmd = "ruff format --check upkie" }
tasks.lint = { depends-on = ["lint-bazel", "lint-ruff", "lint-ruff-format"] }

[tool.pixi.feature.pack]
dependencies = { pixi-pack = ">=0.7.2" }
tasks.pack = "pixi-pack --environment agent-mpc-balancer --platform linux-aarch64 --ignore-pypi-non-wheel"

[tool.pixi.feature.pybullet.dependencies]
gin-config = ">=0.5.0"
meshcat-shapes = ">=0.3.0"
pink = ">=3.0.0,<4"
pinocchio = ">=3.1.0,<4"
proxsuite = ">=0.4.1"
pybullet = "*"
qpmpc = ">=3.0.1,<4"

[tool.pixi.feature.test.dependencies]
lcov = "*"
pybullet = "*"
"stable-baselines3" = ">2.3.0"

[tool.pixi.feature.test.tasks]
coverage-generate = { cmd = "./tools/bazelisk coverage --combined_report=lcov --compilation_mode=fastbuild --instrument_test_targets //..." }
coverage-report = { cmd = "genhtml bazel-out/_coverage/_coverage_report.dat -o bazel-out/_coverage" }
coverage-open = { cmd = "xdg-open bazel-out/_coverage/index.html" }
coverage = { depends-on = ["coverage-generate", "coverage-report", "coverage-open"] }
test = "tools/bazel test //upkie/..."

[tool.pixi.tasks.bullet]
cmd = "./tools/bazelisk run //spines:bullet_spine -- --show"

[tool.pixi.tasks.bullet-wheel_balancer]
cmd = "./tools/bazelisk run //spines:bullet_spine -- --pipeline wheel_balancer --show"

[tool.pixi.environments]
agent-mpc-balancer = { features = ["agent-mpc-balancer"], solve-group = "default" }
agent-rl-baselines3-zoo = { features = ["agent-rl-baselines3-zoo", "pybullet"], solve-group = "default" }
agent-trajectory-player = { features = ["agent-trajectory-player"], solve-group = "default" }
default = { features = [], solve-group = "default" }
docs = { features = ["docs"], solve-group = "default" }
lint = { features = ["lint"], solve-group = "default" }
pack = { features = ["pack"], solve-group = "default" }
pybullet = { features = ["pybullet"], solve-group = "default" }
test = { features = ["test"], solve-group = "default" }

[tool.ruff]
line-length = 79

[tool.ruff.lint]
ignore = [
    "D100",  # we use ## Doxygen comments: https://stackoverflow.com/q/71380065
    "D104",  # we use ## Doxygen comments: https://stackoverflow.com/q/71380065
    "D204",  # ruff does not know we use Doxygen docstrings
    "D205",  # ruff does not know we use Doxygen docstrings
    "D401",  # good for methods but not for class docstrings
    "D405",  # British-style section names are also "proper"!
]
per-file-ignores = { "*/tests/*.py" = ["D"] }
pydocstyle = { convention = "numpy" }
select = [
    # pyflakes
    "F",
    # pycodestyle
    "E",
    "W",
    # isort
    "I001",
    # pydocstyle
    "D"
]
